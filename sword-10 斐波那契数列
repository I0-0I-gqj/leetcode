
/*
动态规划算法。

I- 斐波那契数列

*/
int fib(int n){
    if (n <= 1) {
        return n;
    }
    int i, sum, a, b;

    sum = 0;
    a = 0;  // f(n-2)
    b = 1;  // f(n-1)
    
    for (i=2; i<=n; i++) {
        sum = (a+b) % 1000000007;
        a = b;
        b = sum;
    }
    return sum;
}

/* 
II- 一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。

答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。

*/

int numWays(int n){
    if (n < 2) {
        return 1;
    }

    int sum, i, a, b;

    sum = 0;
    a = 1;
    b = 1;

    for (i=2; i<=n; i++) {
        sum = (a+b)%(1000000007);
        a = b;
        b = sum;
    }

    return sum;
}
